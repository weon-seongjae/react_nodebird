{"version":3,"file":"static/webpack/static\\development\\pages\\profile.js.95f43ec7745514a8f8b8.hot-update.js","sources":["webpack:///./pages/profile.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport {\n  Button, List, Card, Icon,\n} from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport {\n  LOAD_FOLLOWERS_REQUEST,\n  LOAD_FOLLOWINGS_REQUEST,\n  REMOVE_FOLLOWER_REQUEST,\n  UNFOLLOW_USER_REQUEST,\n} from '../reducers/user';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../components/PostCard';\n\n// 배열 안에 jsx를 사용하는 경우에는 반드시 key를 넣을 것\n\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const { me, followingList, followerList } = useSelector(state => state.user);\n  const { mainPosts } = useSelector(state => state.post);\n\n  const onUnfollow = useCallback(userId => () => {\n    dispatch({\n      type: UNFOLLOW_USER_REQUEST,\n      data: userId,\n    });\n  }, []);\n\n  const onRemoveFollower = useCallback(userId => () => {\n    dispatch({\n      type: REMOVE_FOLLOWER_REQUEST,\n      data: userId,\n    });\n  }, []);\n\n  return (\n    <div>\n      <NicknameEditForm />\n      <List\n        style={{ marginBottom: '20px' }}\n        grid={{ gutter: 4, xs: 2, md: 3 }}\n        size=\"small\"\n        header={<div>팔로잉 목록</div>}\n        loadMore={<Button style={{ width: '100%' }}>더 보기</Button>}\n        bordered\n        dataSource={followingList}\n        renderItem={item => (\n          <List.Item style={{ marginTop: '20px' }}>\n            <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onUnfollow(item.id)} />]}>\n              <Card.Meta description={item.nickname} />\n            </Card>\n          </List.Item>\n        )}\n      />\n      <List\n        style={{ marginBottom: '20px' }}\n        grid={{ gutter: 4, xs: 2, md: 3 }}\n        size=\"small\"\n        header={<div>팔로워 목록</div>}\n        loadMore={<Button style={{ width: '100%' }}>더 보기</Button>}\n        bordered\n        dataSource={followerList}\n        renderItem={item => (\n          <List.Item style={{ marginTop: '20px' }}>\n            <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onRemoveFollower(item.id)} />]}>\n              <Card.Meta description={item.nickname} />\n            </Card>\n          </List.Item>\n        )}\n      />\n      <div>\n        {mainPosts.map(c => (\n          <PostCard key={+c.createdAt} post={c} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nProfile.getInitialProps = async (context) => {\n  context.store.dispatch\n}\n  if (me) {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST,\n      data: me.id,\n    });\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST,\n      data: me.id,\n    });\n    dispatch({\n      type: LOAD_USER_POSTS_REQUEST,\n      data: me.id,\n    });\n}\n\nexport default Profile;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;AAMA;AACA;AACA;AAIA;AACA;AACA;AAFA;AAEA;AAAA;AAFA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AACA;AAIA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAOA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAOA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AARA;AAiBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AARA;AAiBA;AACA;AAAA;AAAA;AADA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;A","sourceRoot":""}