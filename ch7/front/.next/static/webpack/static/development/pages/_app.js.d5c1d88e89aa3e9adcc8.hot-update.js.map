{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.d5c1d88e89aa3e9adcc8.hot-update.js","sources":["webpack:///./pages/signup.js"],"sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport {\n  Button, Checkbox, Form, Input,\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Router from 'next/router';\nimport { SIGN_UP_REQUEST } from '../reducers/user';\n\nconst TextInput = ({ value }) => (\n  <div>{value}</div>\n);\n\nTextInput.propTypes = {\n  value: PropTypes.string,\n};\n// 사용자정의 hooks==================================\nexport const useInput = (initValue = null) => {\n  const [value, setter] = useState(initValue);\n  const handler = useCallback((e) => {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n};\n//= =============================\n\nconst Signup = () => {\n  const [passwordCheck, setPasswordCheck] = useState('');\n  const [term, setTerm] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [termError, setTermError] = useState(false);\n\n  const [id, onChangeId] = useInput('');\n  const [nick, onChangeNick] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const dispatch = useDispatch();\n  const { isSigningUp, me } = useSelector(state => state.user);\n\n  useEffect(() => {\n    if (me) {\n      alert('로그인했으니 메인페이지로 이동합니다.');\n      Router.push('/');\n    }\n  }, [me && me.id]); // 객체는 useEffect에 넣지 않는 것이 좋음\n\n  const onSubmit = useCallback((e) => {\n    e.preventDefault();\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n    if (!term) {\n      return setTermError(true);\n    }\n    return dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        userId: id,\n        password,\n        nickname: nick,\n      },\n    }); // action에 넣을 데이터가 동적인 경우에는 action을 함수로 만들 것\n  }, [id, nick, password, passwordCheck, term]);\n\n  const onChangePasswordCheck = useCallback((e) => {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n\n  const onChangeTerm = useCallback((e) => {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n\n  if (me) {\n    return null;\n  }\n\n  return (\n    <>\n      <Form onSubmit={onSubmit} style={{ padding: 10 }}>\n        <TextInput value=\"135135\" />\n        <div>\n          <label htmlFor=\"user-id\">아이디</label>\n          <br />\n          <Input name=\"user-id\" value={id} required onChange={onChangeId} />\n        </div>\n        <div>\n          <label htmlFor=\"user-nick\">닉네임</label>\n          <br />\n          <Input name=\"user-nick\" value={nick} required onChange={onChangeNick} />\n        </div>\n        <div>\n          <label htmlFor=\"user-password\">비밀번호</label>\n          <br />\n          <Input name=\"user-password\" type=\"password\" value={password} required onChange={onChangePassword} />\n        </div>\n        <div>\n          <label htmlFor=\"user-password-check\">비밀번호체크</label>\n          <br />\n          <Input\n            name=\"user-password-check\"\n            type=\"password\"\n            value={passwordCheck}\n            required\n            onChange={onChangePasswordCheck}\n          />\n          {passwordError && <div style={{ color: 'red' }}>비밀번호가 일치하지 않습니다.</div>}\n        </div>\n        <div>\n          <Checkbox name=\"user-term\" value={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\n          {termError && <div style={{ color: 'red' }}>약관에 동의하셔야 합니다.</div>}\n        </div>\n        <div style={{ marginTop: 10 }}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isSigningUp}>가입하기</Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n\nexport default Signup;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AADA;AACA;AAGA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAVA;AAUA;AAAA;AAVA;AAAA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}