{"version":3,"file":"static/webpack/static\\development\\pages\\user.js.fb93f362b6be612b6b0c.hot-update.js","sources":["webpack:///./pages/user.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport PostCard from '../components/PostCard';\n\nconst User = ({ id }) => { // 서버에서 받아온 getInitialProps를 프론트로 전달\n  const dispatch = useDispatch();\n  const { mainPosts } = useSelector(state => state.post);\n  const { userInfo } = useSelector(state => state.user);\n\n  return (\n    <div>\n      {userInfo\n        ? (\n          <Card\n            actions={[\n              <div key=\"twit\">\n                짹짹\n                <br />\n                {userInfo.Posts}\n              </div>,\n              <div key=\"following\">\n                팔로잉\n                <br />\n                {userInfo.Followings}\n              </div>,\n              <div key=\"follower\">\n                팔로워\n                <br />\n                {userInfo.Followers}\n              </div>,\n            ]}\n          >\n            <Card.Meta\n              avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\n              title={userInfo.nickname}\n            />\n          </Card>\n        )\n        : null}\n      {mainPosts.map(c => (\n        <PostCard key={+c.createdAt} post={c} />\n      ))}\n    </div>\n  );\n};\n\nUser.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nUser.getInitialProps = async (context) => { // next가 임의로 추가해준 lifecycle, getInitialProps가 제일 먼저 실행됨. 서버사이드 렌더링의 핵심\n  const id = parseInt(context.query.id, 10);\n  console.log('user getInitialProps', id);\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: id,\n  });\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: id,\n  });\n  return { id };\n};\n\nexport default User;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAEA;AAAA;AAFA;AACA;AADA;AAGA;AAAA;AAHA;AACA;AAIA;AAKA;AACA;AAAA;AAKA;AAAA;AAKA;AAAA;AAZA;AAoBA;AACA;AAFA;AAOA;AACA;AAAA;AAAA;AADA;AAKA;AACA;AACA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAPA;AAWA;AAAA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAaA;;;;A","sourceRoot":""}