{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_HASHTAG_POSTS_REQUEST, LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../containers/PostCard';\n\nvar Hashtag = function Hashtag(_ref) {\n  var tag = _ref.tag;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePost = _useSelector.hasMorePost;\n\n  var onScroll = useCallback(function () {\n    console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight); // scrollY: 처음부터 제일 밑으로 내일 위치에서 상단까지의 높이(스크롤 내린 거리)\n    // clientHeight: 상단까지의 높이에서 스크롤을 제외한 하단까지의 높이(화면높이)\n    // scrollHeight: scrollY + clientHeight 값(전체 화면 길이)\n\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMorePost) {\n        dispatch({\n          type: LOAD_HASHTAG_POSTS_REQUEST,\n          lastId: mainPosts[mainPosts.length - 1].id,\n          data: tag\n        });\n      }\n    }\n  }, [hasMorePost, mainPosts.length]);\n  return React.createElement(\"div\", null, mainPosts.map(function (c) {\n    return React.createElement(PostCard, {\n      key: c.id,\n      post: c\n    });\n  }));\n};\n\nHashtag.propTypes = {\n  tag: PropTypes.string.isRequired\n};\n\nHashtag.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var tag;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // next가 임의로 추가해준 lifecycle, getInitialProps가 제일 먼저 실행됨.\n            tag = context.query.tag;\n            console.log('hashtag getInitialProps', tag);\n            context.store.dispatch({\n              type: LOAD_HASHTAG_POSTS_REQUEST,\n              data: tag\n            });\n            return _context.abrupt(\"return\", {\n              tag: context.query.tag\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Hashtag;","map":{"version":3,"sources":["C:\\react-nodebird\\ch7\\front\\pages\\hashtag.js"],"names":["React","useCallback","useEffect","PropTypes","useDispatch","useSelector","LOAD_HASHTAG_POSTS_REQUEST","LOAD_MAIN_POSTS_REQUEST","PostCard","Hashtag","tag","dispatch","state","post","mainPosts","hasMorePost","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","map","c","propTypes","string","isRequired","getInitialProps","context","query","store"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,0BAAR,EAAoCC,uBAApC,QAAkE,kBAAlE;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAC3B,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AAD2B,qBAEQC,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAFnB;AAAA,MAEnBC,SAFmB,gBAEnBA,SAFmB;AAAA,MAERC,WAFQ,gBAERA,WAFQ;;AAI3B,MAAMC,QAAQ,GAAGf,WAAW,CAAC,YAAM;AACjCgB,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,OAAnB,EAA4BC,QAAQ,CAACC,eAAT,CAAyBC,YAArD,EAAmEF,QAAQ,CAACC,eAAT,CAAyBE,YAA5F,EADiC,CAEjC;AACA;AACA;;AACA,QAAIL,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAArG,EAA0G;AACxG,UAAGT,WAAH,EAAgB;AACdJ,QAAAA,QAAQ,CAAC;AACPc,UAAAA,IAAI,EAAEnB,0BADC;AAEPoB,UAAAA,MAAM,EAAEZ,SAAS,CAACA,SAAS,CAACa,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAFjC;AAGPC,UAAAA,IAAI,EAAEnB;AAHC,SAAD,CAAR;AAKD;AACF;AACF,GAd2B,EAc1B,CAACK,WAAD,EAAcD,SAAS,CAACa,MAAxB,CAd0B,CAA5B;AAgBA,SACE,iCACGb,SAAS,CAACgB,GAAV,CAAc,UAAAC,CAAC;AAAA,WACd,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAC,CAACH,EAAjB;AAAqB,MAAA,IAAI,EAAEG;AAA3B,MADc;AAAA,GAAf,CADH,CADF;AAOD,CA3BD;;AA6BAtB,OAAO,CAACuB,SAAR,GAAoB;AAClBtB,EAAAA,GAAG,EAAEP,SAAS,CAAC8B,MAAV,CAAiBC;AADJ,CAApB;;AAIAzB,OAAO,CAAC0B,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA0B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqB;AACvC1B,YAAAA,GADkB,GACZ0B,OAAO,CAACC,KAAR,CAAc3B,GADF;AAExBO,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCR,GAAvC;AACA0B,YAAAA,OAAO,CAACE,KAAR,CAAc3B,QAAd,CAAuB;AACrBc,cAAAA,IAAI,EAAEnB,0BADe;AAErBuB,cAAAA,IAAI,EAAEnB;AAFe,aAAvB;AAHwB,6CAOjB;AAAEA,cAAAA,GAAG,EAAE0B,OAAO,CAACC,KAAR,CAAc3B;AAArB,aAPiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAeD,OAAf","sourcesContent":["import React, {useCallback, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {LOAD_HASHTAG_POSTS_REQUEST, LOAD_MAIN_POSTS_REQUEST} from '../reducers/post';\r\nimport PostCard from '../containers/PostCard';\r\n\r\nconst Hashtag = ({ tag }) => {\r\n  const dispatch = useDispatch();\r\n  const { mainPosts, hasMorePost } = useSelector(state => state.post);\r\n\r\n  const onScroll = useCallback(() => {\r\n    console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\r\n    // scrollY: 처음부터 제일 밑으로 내일 위치에서 상단까지의 높이(스크롤 내린 거리)\r\n    // clientHeight: 상단까지의 높이에서 스크롤을 제외한 하단까지의 높이(화면높이)\r\n    // scrollHeight: scrollY + clientHeight 값(전체 화면 길이)\r\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n      if(hasMorePost) {\r\n        dispatch({\r\n          type: LOAD_HASHTAG_POSTS_REQUEST,\r\n          lastId: mainPosts[mainPosts.length - 1].id,\r\n          data: tag,\r\n        })\r\n      }\r\n    }\r\n  },[hasMorePost, mainPosts.length]);\r\n\r\n  return (\r\n    <div>\r\n      {mainPosts.map(c => (\r\n        <PostCard key={c.id} post={c} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nHashtag.propTypes = {\r\n  tag: PropTypes.string.isRequired,\r\n};\r\n\r\nHashtag.getInitialProps = async (context) => { // next가 임의로 추가해준 lifecycle, getInitialProps가 제일 먼저 실행됨.\r\n  const tag = context.query.tag;\r\n  console.log('hashtag getInitialProps', tag);\r\n  context.store.dispatch({\r\n    type: LOAD_HASHTAG_POSTS_REQUEST,\r\n    data: tag,\r\n  });\r\n  return { tag: context.query.tag }; // _app.js로  tag 리턴, component의 props로 만들어줌.\r\n};\r\n\r\nexport default Hashtag;\r\n"]},"metadata":{},"sourceType":"module"}