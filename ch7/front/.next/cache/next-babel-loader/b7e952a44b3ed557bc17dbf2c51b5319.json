{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React, { useCallback } from 'react';\nimport { Button, List, Card, Icon } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, REMOVE_FOLLOWER_REQUEST, UNFOLLOW_USER_REQUEST } from '../reducers/user';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../components/PostCard'; // 배열 안에 jsx를 사용하는 경우에는 반드시 key를 넣을 것\n\nvar Profile = function Profile() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      followingList = _useSelector.followingList,\n      followerList = _useSelector.followerList,\n      hasMoreFollower = _useSelector.hasMoreFollower,\n      hasMoreFollowing = _useSelector.hasMoreFollowing;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts;\n\n  var onUnfollow = useCallback(function (userId) {\n    return function () {\n      dispatch({\n        type: UNFOLLOW_USER_REQUEST,\n        data: userId\n      });\n    };\n  }, []);\n  var onRemoveFollower = useCallback(function (userId) {\n    return function () {\n      dispatch({\n        type: REMOVE_FOLLOWER_REQUEST,\n        data: userId\n      });\n    };\n  }, []);\n  var loadMoreFollowings = useCallback(function () {\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST,\n      offset: followingList.length\n    });\n  }, [followingList.length]);\n  var loadMoreFollower = useCallback(function () {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST,\n      offset: followerList.length\n    });\n  }, [followerList.length]);\n  return React.createElement(\"div\", null, React.createElement(NicknameEditForm, null), React.createElement(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: React.createElement(\"div\", null, \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\"),\n    loadMore: hasMoreFollowing && React.createElement(Button, {\n      style: {\n        width: '100%'\n      },\n      onClick: loadMoreFollowings\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followingList,\n    renderItem: function renderItem(item) {\n      return React.createElement(List.Item, {\n        style: {\n          marginTop: '20px'\n        }\n      }, React.createElement(Card, {\n        actions: [React.createElement(Icon, {\n          key: \"stop\",\n          type: \"stop\",\n          onClick: onUnfollow(item.id)\n        })]\n      }, React.createElement(Card.Meta, {\n        description: item.nickname\n      })));\n    }\n  }), React.createElement(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: React.createElement(\"div\", null, \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\"),\n    loadMore: hasMoreFollower && React.createElement(Button, {\n      style: {\n        width: '100%'\n      },\n      onClick: loadMoreFollower\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followerList,\n    renderItem: function renderItem(item) {\n      return React.createElement(List.Item, {\n        style: {\n          marginTop: '20px'\n        }\n      }, React.createElement(Card, {\n        actions: [React.createElement(Icon, {\n          key: \"stop\",\n          type: \"stop\",\n          onClick: onRemoveFollower(item.id)\n        })]\n      }, React.createElement(Card.Meta, {\n        description: item.nickname\n      })));\n    }\n  }), React.createElement(\"div\", null, mainPosts.map(function (c) {\n    return React.createElement(PostCard, {\n      key: +c.createdAt,\n      post: c\n    });\n  })));\n}; // SSR 만들기 =================================\n\n\nProfile.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var state;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            state = context.store.getState(); // 이 직전에 LOAD_USERS_REQUEST : _app.js에서 실행됨.\n\n            context.store.dispatch({\n              type: LOAD_FOLLOWERS_REQUEST,\n              data: state.user.me && state.user.me.id\n            });\n            context.store.dispatch({\n              type: LOAD_FOLLOWINGS_REQUEST,\n              data: state.user.me && state.user.me.id\n            });\n            context.store.dispatch({\n              type: LOAD_USER_POSTS_REQUEST,\n              data: state.user.me && state.user.me.id\n            }); //  이 쯤에서 LOAD_USERS_SUCCESS가 되어 me가 생김.\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Profile;","map":{"version":3,"sources":["C:\\react-nodebird\\ch7\\front\\pages\\profile.js"],"names":["React","useCallback","Button","List","Card","Icon","useDispatch","useSelector","NicknameEditForm","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","REMOVE_FOLLOWER_REQUEST","UNFOLLOW_USER_REQUEST","LOAD_USER_POSTS_REQUEST","PostCard","Profile","dispatch","state","user","me","followingList","followerList","hasMoreFollower","hasMoreFollowing","post","mainPosts","onUnfollow","userId","type","data","onRemoveFollower","loadMoreFollowings","offset","length","loadMoreFollower","marginBottom","gutter","xs","md","width","item","marginTop","id","nickname","map","c","createdAt","getInitialProps","context","store","getState"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\r\nimport {\r\n  Button, List, Card, Icon,\r\n} from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport NicknameEditForm from '../components/NicknameEditForm';\r\nimport {\r\n  LOAD_FOLLOWERS_REQUEST,\r\n  LOAD_FOLLOWINGS_REQUEST,\r\n  REMOVE_FOLLOWER_REQUEST,\r\n  UNFOLLOW_USER_REQUEST,\r\n} from '../reducers/user';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\r\nimport PostCard from '../components/PostCard';\r\n\r\n// 배열 안에 jsx를 사용하는 경우에는 반드시 key를 넣을 것\r\n\r\n\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n  const { me, followingList, followerList, hasMoreFollower, hasMoreFollowing  } = useSelector(state => state.user);\r\n  const { mainPosts } = useSelector(state => state.post);\r\n\r\n  const onUnfollow = useCallback(userId => () => {\r\n    dispatch({\r\n      type: UNFOLLOW_USER_REQUEST,\r\n      data: userId,\r\n    });\r\n  }, []);\r\n\r\n  const onRemoveFollower = useCallback(userId => () => {\r\n    dispatch({\r\n      type: REMOVE_FOLLOWER_REQUEST,\r\n      data: userId,\r\n    });\r\n  }, []);\r\n\r\n  const loadMoreFollowings = useCallback(() => {\r\n    dispatch({\r\n      type: LOAD_FOLLOWINGS_REQUEST,\r\n      offset: followingList.length,\r\n    });\r\n  }, [followingList.length]);\r\n\r\n  const loadMoreFollower = useCallback(() => {\r\n    dispatch({\r\n      type: LOAD_FOLLOWERS_REQUEST,\r\n      offset: followerList.length,\r\n    });\r\n  }, [followerList.length]);\r\n\r\n  return (\r\n    <div>\r\n      <NicknameEditForm />\r\n      <List\r\n        style={{ marginBottom: '20px' }}\r\n        grid={{ gutter: 4, xs: 2, md: 3 }}\r\n        size=\"small\"\r\n        header={<div>팔로잉 목록</div>}\r\n        loadMore={hasMoreFollowing && <Button style={{ width: '100%' }} onClick={loadMoreFollowings}>더 보기</Button>}\r\n        bordered\r\n        dataSource={followingList}\r\n        renderItem={item => (\r\n          <List.Item style={{ marginTop: '20px' }}>\r\n            <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onUnfollow(item.id)} />]}>\r\n              <Card.Meta description={item.nickname} />\r\n            </Card>\r\n          </List.Item>\r\n        )}\r\n      />\r\n      <List\r\n        style={{ marginBottom: '20px' }}\r\n        grid={{ gutter: 4, xs: 2, md: 3 }}\r\n        size=\"small\"\r\n        header={<div>팔로워 목록</div>}\r\n        loadMore={hasMoreFollower && <Button style={{ width: '100%' }} onClick={loadMoreFollower}>더 보기</Button>}\r\n        bordered\r\n        dataSource={followerList}\r\n        renderItem={item => (\r\n          <List.Item style={{ marginTop: '20px' }}>\r\n            <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onRemoveFollower(item.id)} />]}>\r\n              <Card.Meta description={item.nickname} />\r\n            </Card>\r\n          </List.Item>\r\n        )}\r\n      />\r\n      <div>\r\n        {mainPosts.map(c => (\r\n          <PostCard key={+c.createdAt} post={c} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n// SSR 만들기 =================================\r\nProfile.getInitialProps = async (context) => {\r\n  const state = context.store.getState();\r\n  // 이 직전에 LOAD_USERS_REQUEST : _app.js에서 실행됨.\r\n  context.store.dispatch({\r\n    type: LOAD_FOLLOWERS_REQUEST,\r\n    data: state.user.me && state.user.me.id,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_FOLLOWINGS_REQUEST,\r\n    data: state.user.me && state.user.me.id,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USER_POSTS_REQUEST,\r\n    data: state.user.me && state.user.me.id,\r\n  });\r\n//  이 쯤에서 LOAD_USERS_SUCCESS가 되어 me가 생김.\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}