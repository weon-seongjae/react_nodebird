{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nexport var initialState = {\n  // redux에서 중앙통제실\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  isLoggingIn: false,\n  // 로그인 시도중\n  logInErrorReason: '',\n  // 로그인 실패 사유\n  isSignedUp: false,\n  // 회원가입 성공\n  isSigningUp: false,\n  // 회원가입 시도중\n  signUpErrorReason: '',\n  // 회원가입 실패사유\n  me: null,\n  // 내 정보\n  followingList: [],\n  // 팔로잉 리스트\n  followerList: [],\n  // 팔로워 리스트\n  userInfo: null,\n  // 남의 정보\n  isEditingNickname: false,\n  // 이름 변경 중\n  editNicknameErrorReason: '' // 이름 변경 실패 사유\n\n}; //= =액션의 이름(비동기요청)====================\n\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport var LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport var LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\nexport var LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\nexport var LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE';\nexport var LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport var LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport var LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\nexport var LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport var LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport var LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\nexport var FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\nexport var FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\nexport var FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\nexport var UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\nexport var UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\nexport var UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\nexport var REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport var REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport var REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\nexport var EDIT_NICKNAME_REQUEST = 'EDIT_NICKNAME_REQUEST';\nexport var EDIT_NICKNAME_SUCCESS = 'EDIT_NICKNAME_SUCCESS';\nexport var EDIT_NICKNAME_FAILURE = 'EDIT_NICKNAME_FAILURE';\nexport var ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport var REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME'; //= =실제 액션======================\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: true,\n          logInErrorReason: ''\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          me: action.data,\n          isLoading: false\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          logInErrorReason: action.error,\n          me: null\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: true\n        });\n      }\n\n    case LOG_OUT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: false,\n          me: null\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: true,\n          isSignedUp: false,\n          signUpErrorReason: ''\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          isSignedUp: true\n        });\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          signUpErrorReason: action.error\n        });\n      }\n\n    case LOAD_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_USER_SUCCESS:\n      {\n        if (action.me) {\n          return _objectSpread({}, state, {\n            me: action.data // 내 정보\n\n          });\n        }\n\n        return _objectSpread({}, state, {\n          userInfo: action.data // 남의 정보\n\n        });\n      }\n\n    case LOAD_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case FOLLOW_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case FOLLOW_USER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Followings: [{\n              id: action.data\n            }].concat(_toConsumableArray(state.me.Followings))\n          })\n        });\n      }\n\n    case FOLLOW_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNFOLLOW_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNFOLLOW_USER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Followings: state.me.Followings.filter(function (v) {\n              return v.id !== action.data;\n            })\n          }),\n          followingList: state.followingList.filter(function (v) {\n            return v.id !== action.data;\n          })\n        });\n      }\n\n    case UNFOLLOW_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_POST_TO_ME:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Posts: [{\n              id: action.data\n            }].concat(_toConsumableArray(state.me.Posts))\n          })\n        });\n      }\n\n    case REMOVE_POST_OF_ME:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Posts: state.me.Posts.filter(function (v) {\n              return v.id !== action.data;\n            })\n          })\n        });\n      }\n\n    case LOAD_FOLLOWERS_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_FOLLOWERS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          followerList: action.data\n        });\n      }\n\n    case LOAD_FOLLOWERS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_FOLLOWINGS_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_FOLLOWINGS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          followingList: action.data\n        });\n      }\n\n    case LOAD_FOLLOWINGS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_FOLLOWER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_FOLLOWER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Followers: state.me.Followers.filter(function (v) {\n              return v.id !== action.data;\n            })\n          }),\n          followerList: state.followerList.filter(function (v) {\n            return v.id !== action.data;\n          })\n        });\n      }\n\n    case REMOVE_FOLLOWER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case EDIT_NICKNAME_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isEditingNickname: true,\n          editNicknameErrorReason: ''\n        });\n      }\n\n    case EDIT_NICKNAME_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isEditingNickname: false,\n          me: _objectSpread({}, state.me, {\n            nickname: action.data\n          })\n        });\n      }\n\n    case EDIT_NICKNAME_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isEditingNickname: false,\n          editNicknameErrorReason: action.error\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:\\react_nodebird\\ch7\\front\\reducers\\user.js"],"names":["initialState","isLoggingOut","isLoggingIn","logInErrorReason","isSignedUp","isSigningUp","signUpErrorReason","me","followingList","followerList","userInfo","isEditingNickname","editNicknameErrorReason","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_FOLLOW_REQUEST","LOAD_FOLLOW_SUCCESS","LOAD_FOLLOW_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","EDIT_NICKNAME_REQUEST","EDIT_NICKNAME_SUCCESS","EDIT_NICKNAME_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","state","action","type","data","isLoading","error","Followings","id","filter","v","Posts","Followers","nickname"],"mappings":"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","sourcesContent":["export const initialState = { // redux에서 중앙통제실\n  isLoggingOut: false, // 로그아웃 시도중\n  isLoggingIn: false, // 로그인 시도중\n  logInErrorReason: '', // 로그인 실패 사유\n  isSignedUp: false, // 회원가입 성공\n  isSigningUp: false, // 회원가입 시도중\n  signUpErrorReason: '', // 회원가입 실패사유\n  me: null, // 내 정보\n  followingList: [], // 팔로잉 리스트\n  followerList: [], // 팔로워 리스트\n  userInfo: null, // 남의 정보\n  isEditingNickname: false, // 이름 변경 중\n  editNicknameErrorReason: '', // 이름 변경 실패 사유\n};\n\n//= =액션의 이름(비동기요청)====================\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\nexport const LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\nexport const LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE';\n\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\n\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\n\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\n\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\n\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\n\nexport const EDIT_NICKNAME_REQUEST = 'EDIT_NICKNAME_REQUEST';\nexport const EDIT_NICKNAME_SUCCESS = 'EDIT_NICKNAME_SUCCESS';\nexport const EDIT_NICKNAME_FAILURE = 'EDIT_NICKNAME_FAILURE';\n\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\n//= =실제 액션======================\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST: {\n      return {\n        ...state,\n        isLoggingIn: true,\n        logInErrorReason: '',\n      };\n    }\n    case LOG_IN_SUCCESS: {\n      return {\n        ...state,\n        isLoggingIn: false,\n        me: action.data,\n        isLoading: false,\n      };\n    }\n    case LOG_IN_FAILURE: {\n      return {\n        ...state,\n        isLoggingIn: false,\n        logInErrorReason: action.error,\n        me: null,\n      };\n    }\n    case LOG_OUT_REQUEST: {\n      return {\n        ...state,\n        isLoggingOut: true,\n      };\n    }\n    case LOG_OUT_SUCCESS: {\n      return {\n        ...state,\n        isLoggingOut: false,\n        me: null,\n      };\n    }\n    case SIGN_UP_REQUEST: {\n      return {\n        ...state,\n        isSigningUp: true,\n        isSignedUp: false,\n        signUpErrorReason: '',\n      };\n    }\n    case SIGN_UP_SUCCESS: {\n      return {\n        ...state,\n        isSigningUp: false,\n        isSignedUp: true,\n      };\n    }\n    case SIGN_UP_FAILURE: {\n      return {\n        ...state,\n        isSigningUp: false,\n        signUpErrorReason: action.error,\n      };\n    }\n    case LOAD_USER_REQUEST: {\n      return {\n        ...state,\n      };\n    }\n    case LOAD_USER_SUCCESS: {\n      if (action.me) {\n        return {\n          ...state,\n          me: action.data, // 내 정보\n        };\n      }\n      return {\n        ...state,\n        userInfo: action.data, // 남의 정보\n      };\n    }\n    case LOAD_USER_FAILURE: {\n      return {\n        ...state,\n      };\n    }\n    case FOLLOW_USER_REQUEST: {\n      return {\n        ...state,\n      };\n    }\n    case FOLLOW_USER_SUCCESS: {\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          Followings: [{ id: action.data }, ...state.me.Followings],\n        },\n      };\n    }\n    case FOLLOW_USER_FAILURE: {\n      return {\n        ...state,\n      };\n    }\n    case UNFOLLOW_USER_REQUEST: {\n      return {\n        ...state,\n      };\n    }\n    case UNFOLLOW_USER_SUCCESS: {\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          Followings: state.me.Followings.filter(v => v.id !== action.data),\n        },\n        followingList: state.followingList.filter(v => v.id !== action.data),\n      };\n    }\n    case UNFOLLOW_USER_FAILURE: {\n      return {\n        ...state,\n      };\n    }\n    case ADD_POST_TO_ME: {\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          Posts: [{ id: action.data }, ...state.me.Posts],\n        },\n      };\n    }\n    case REMOVE_POST_OF_ME: {\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          Posts: state.me.Posts.filter(v => v.id !== action.data),\n        },\n      };\n    }\n    case LOAD_FOLLOWERS_REQUEST: {\n      return {\n        ...state,\n      };\n    }\n    case LOAD_FOLLOWERS_SUCCESS: {\n      return {\n        ...state,\n        followerList: action.data,\n      };\n    }\n    case LOAD_FOLLOWERS_FAILURE: {\n      return {\n        ...state,\n      };\n    }\n    case LOAD_FOLLOWINGS_REQUEST: {\n      return {\n        ...state,\n      };\n    }\n    case LOAD_FOLLOWINGS_SUCCESS: {\n      return {\n        ...state,\n        followingList: action.data,\n      };\n    }\n    case LOAD_FOLLOWINGS_FAILURE: {\n      return {\n        ...state,\n      };\n    }\n    case REMOVE_FOLLOWER_REQUEST: {\n      return {\n        ...state,\n      };\n    }\n    case REMOVE_FOLLOWER_SUCCESS: {\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          Followers: state.me.Followers.filter(v => v.id !== action.data),\n        },\n        followerList: state.followerList.filter(v => v.id !== action.data),\n      };\n    }\n    case REMOVE_FOLLOWER_FAILURE: {\n      return {\n        ...state,\n      };\n    }\n    case EDIT_NICKNAME_REQUEST: {\n      return {\n        ...state,\n        isEditingNickname: true,\n        editNicknameErrorReason: '',\n      };\n    }\n    case EDIT_NICKNAME_SUCCESS: {\n      return {\n        ...state,\n        isEditingNickname: false,\n        me: {\n          ...state.me,\n          nickname: action.data,\n        },\n      };\n    }\n    case EDIT_NICKNAME_FAILURE: {\n      return {\n        ...state,\n        isEditingNickname: false,\n        editNicknameErrorReason: action.error,\n      };\n    }\n    default: {\n      return {\n        ...state,\n      };\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}