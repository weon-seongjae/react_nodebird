{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport Slick from 'react-slick';\n\nvar ImagesZoom = function ImagesZoom(_ref) {\n  var images = _ref.images,\n      onClose = _ref.onClose;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentSlide = _useState2[0],\n      setCurrentSlide = _useState2[1];\n\n  return React.createElement(\"div\", {\n    style: {\n      position: 'fixed',\n      zIndex: 5000,\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    }\n  }, React.createElement(\"header\", {\n    style: {\n      height: 44,\n      background: 'white',\n      position: 'relative',\n      padding: 0,\n      textAlign: 'center'\n    }\n  }, React.createElement(\"h1\", {\n    style: {\n      margin: 0,\n      fontsize: '17px',\n      color: '#333',\n      lineHeight: '44px'\n    }\n  }, \"\\uC0C1\\uC138\\uC774\\uBBF8\\uC9C0\"), React.createElement(Icon, {\n    type: \"close\",\n    onClick: onClose,\n    style: {\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      padding: 15,\n      lineHeight: '14px',\n      cursor: 'pointer'\n    }\n  })), React.createElement(\"div\", {\n    style: {\n      height: 'calc(100% - 44px',\n      background: '#090909'\n    }\n  }, React.createElement(Slick, {\n    initialSlide: 0,\n    afterChange: function afterChange(slide) {\n      return setCurrentSlide(slide);\n    },\n    infinite: false,\n    arrows: true,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  }, images.map(function (v) {\n    return React.createElement(\"div\", {\n      style: {\n        padding: 32,\n        textAlign: 'center'\n      }\n    }, React.createElement(\"img\", {\n      src: \"http://localhost:3065/\".concat(v.src),\n      style: {\n        margin: '0 auto',\n        maxHeight: 750\n      }\n    }));\n  })), React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, React.createElement(\"div\", {\n    style: {\n      width: 75,\n      height: 30,\n      lineHeight: '30px',\n      borderRadius: 15,\n      background: '#313131',\n      display: 'inline-block',\n      textAlign: 'center',\n      color: 'white',\n      fontSize: '15px'\n    }\n  }, currentSlide + 1, ' ', \"/\", images.length))));\n};\n\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string\n  })).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;","map":{"version":3,"sources":["C:\\react_nodebird\\ch7\\front\\components\\Imagezoom.js"],"names":["React","useState","PropTypes","Icon","Slick","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","position","zIndex","top","left","right","bottom","height","background","padding","textAlign","margin","fontsize","color","lineHeight","cursor","slide","map","v","src","maxHeight","width","borderRadius","display","fontSize","length","propTypes","arrayOf","shape","string","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport Slick from 'react-slick';\n\nconst ImagesZoom = ({ images, onClose }) => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  return (\n    <div style={{\n      position: 'fixed', zIndex: 5000, top: 0, left: 0, right: 0, bottom: 0,\n    }}\n    >\n      <header style={{\n        height: 44, background: 'white', position: 'relative', padding: 0, textAlign: 'center',\n      }}\n      >\n        <h1 style={{\n          margin: 0, fontsize: '17px', color: '#333', lineHeight: '44px',\n        }}\n        >\n상세이미지\n        </h1>\n        <Icon\n          type=\"close\"\n          onClick={onClose}\n          style={{\n            position: 'absolute', right: 0, top: 0, padding: 15, lineHeight: '14px', cursor: 'pointer',\n          }}\n        />\n      </header>\n      <div style={{ height: 'calc(100% - 44px', background: '#090909' }}>\n        <Slick\n          initialSlide={0}\n          afterChange={slide => setCurrentSlide(slide)}\n          infinite={false}\n          arrows\n          slidesToShow={1}\n          slidesToScroll={1}\n        >\n          {images.map(v => (\n            <div style={{ padding: 32, textAlign: 'center' }}>\n              <img src={`http://localhost:3065/${v.src}`} style={{ margin: '0 auto', maxHeight: 750 }} />\n            </div>\n          ))}\n        </Slick>\n        <div style={{ textAlign: 'center' }}>\n          <div style={{\n            width: 75, height: 30, lineHeight: '30px', borderRadius: 15, background: '#313131', display: 'inline-block', textAlign: 'center', color: 'white', fontSize: '15px',\n          }}\n          >\n            {currentSlide + 1}\n            {' '}\n/\n            {images.length}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n  })).isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default ImagesZoom;\n"]},"metadata":{},"sourceType":"module"}