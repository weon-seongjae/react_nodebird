{"ast":null,"code":"import React, { useCallback, useEffect, useState } from 'react';\nimport { Button, List, Card, Icon } from 'antd';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, REMOVE_FOLLOWER_REQUEST, UNFOLLOW_USER_REQUEST } from \"../reducers/user\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\nimport PostCard from \"../components/PostCard\"; // 배열 안에 jsx를 사용하는 경우에는 반드시 key를 넣을 것\n\nvar Profile = function Profile() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      followingList = _useSelector.followingList,\n      followerList = _useSelector.followerList;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts;\n\n  useEffect(function () {\n    if (me) {\n      dispatch({\n        type: LOAD_FOLLOWERS_REQUEST,\n        data: me.id\n      });\n      dispatch({\n        type: LOAD_FOLLOWINGS_REQUEST,\n        data: me.id\n      });\n      dispatch({\n        type: LOAD_USER_POSTS_REQUEST,\n        data: me.id\n      });\n    }\n  }, [me && me.id]);\n  var onUnfollow = useCallback(function (userId) {\n    return function () {\n      dispatch({\n        type: UNFOLLOW_USER_REQUEST,\n        data: userId\n      });\n    };\n  }, []);\n  var onRemoveFollower = useCallback(function (userId) {\n    return function () {\n      dispatch({\n        type: REMOVE_FOLLOWER_REQUEST,\n        data: userId\n      });\n    };\n  }, []);\n  return React.createElement(\"div\", null, React.createElement(NicknameEditForm, null), React.createElement(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: React.createElement(\"div\", null, \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\"),\n    loadMore: React.createElement(Button, {\n      style: {\n        width: '100%'\n      }\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followingList,\n    renderItem: function renderItem(item) {\n      return React.createElement(List.Item, {\n        style: {\n          marginTop: '20px'\n        }\n      }, React.createElement(Card, {\n        actions: [React.createElement(Icon, {\n          key: \"stop\",\n          type: \"stop\",\n          onClick: onUnfollow(item.id)\n        })]\n      }, React.createElement(Card.Meta, {\n        description: item.nickname\n      })));\n    }\n  }), React.createElement(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: React.createElement(\"div\", null, \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\"),\n    loadMore: React.createElement(Button, {\n      style: {\n        width: '100%'\n      }\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followerList,\n    renderItem: function renderItem(item) {\n      return React.createElement(List.Item, {\n        style: {\n          marginTop: '20px'\n        }\n      }, React.createElement(Card, {\n        actions: [React.createElement(Icon, {\n          key: \"stop\",\n          type: \"stop\",\n          onClick: onRemoveFollower(item.id)\n        })]\n      }, React.createElement(Card.Meta, {\n        description: item.nickname\n      })));\n    }\n  }), React.createElement(\"div\", null, mainPosts.map(function (c) {\n    return React.createElement(PostCard, {\n      key: +c.createdAt,\n      post: c\n    });\n  })));\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:\\react-nodebird\\ch7\\front\\pages\\profile.js"],"names":["React","useCallback","useEffect","useState","Button","List","Card","Icon","useDispatch","useSelector","NicknameEditForm","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","REMOVE_FOLLOWER_REQUEST","UNFOLLOW_USER_REQUEST","LOAD_USER_POSTS_REQUEST","PostCard","Profile","dispatch","state","user","me","followingList","followerList","post","mainPosts","type","data","id","onUnfollow","userId","onRemoveFollower","marginBottom","gutter","xs","md","width","item","marginTop","nickname","map","c","createdAt"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\nimport { Button, List, Card, Icon } from 'antd';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport {\n  LOAD_FOLLOWERS_REQUEST,\n  LOAD_FOLLOWINGS_REQUEST,\n  REMOVE_FOLLOWER_REQUEST,\n  UNFOLLOW_USER_REQUEST\n} from \"../reducers/user\";\nimport {LOAD_USER_POSTS_REQUEST} from \"../reducers/post\";\nimport PostCard from \"../components/PostCard\";\n\n// 배열 안에 jsx를 사용하는 경우에는 반드시 key를 넣을 것\n\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const { me, followingList, followerList } = useSelector(state => state.user);\n  const { mainPosts } = useSelector(state => state.post);\n\n  useEffect(() => {\n    if (me) {\n      dispatch({\n        type: LOAD_FOLLOWERS_REQUEST,\n        data: me.id,\n      });\n      dispatch({\n        type: LOAD_FOLLOWINGS_REQUEST,\n        data: me.id,\n      });\n      dispatch({\n        type: LOAD_USER_POSTS_REQUEST,\n        data: me.id,\n      });\n    }\n  }, [me && me.id]);\n\n  const onUnfollow = useCallback(userId => () => {\n    dispatch({\n      type: UNFOLLOW_USER_REQUEST,\n      data: userId,\n    });\n  },[]);\n\n  const onRemoveFollower = useCallback(userId => () => {\n    dispatch({\n      type: REMOVE_FOLLOWER_REQUEST,\n      data: userId,\n    });\n  },[]);\n\n  return (\n  <div>\n    <NicknameEditForm/>\n    <List\n      style={{marginBottom: '20px'}}\n      grid={{gutter: 4, xs: 2, md: 3}}\n      size=\"small\"\n      header={<div>팔로잉 목록</div>}\n      loadMore={<Button style={{width: '100%'}}>더 보기</Button>}\n      bordered\n      dataSource={followingList}\n      renderItem={item => (\n        <List.Item style={{marginTop: '20px'}}>\n          <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onUnfollow(item.id)}/>]}><Card.Meta description={item.nickname}/>\n          </Card>\n        </List.Item>\n      )}\n    />\n    <List\n      style={{marginBottom: '20px'}}\n      grid={{gutter: 4, xs: 2, md: 3}}\n      size=\"small\"\n      header={<div>팔로워 목록</div>}\n      loadMore={<Button style={{width: '100%'}}>더 보기</Button>}\n      bordered\n      dataSource={followerList}\n      renderItem={item => (\n        <List.Item style={{marginTop: '20px'}}>\n          <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onRemoveFollower(item.id)} />]}><Card.Meta description={item.nickname}/>\n          </Card>\n        </List.Item>\n      )}\n    />\n    <div>\n      {mainPosts.map(c => (\n        <PostCard key={+c.createdAt} post={c} />\n      ))}\n    </div>\n  </div>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}