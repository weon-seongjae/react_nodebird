{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//= ===user정보를 답고 있는 store======================================\nvar dummyUser = {\n  nickname: '가물이',\n  Post: [],\n  Followings: [],\n  Followers: [],\n  id: 1\n};\nexport var initialState = {\n  // redux에서 중앙통제실\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  isLoggingIn: false,\n  // 로그인 시도중\n  logInErrorReason: '',\n  // 로그인 실패 사유\n  isSignedUp: false,\n  // 회원가입 성공\n  isSigningUp: false,\n  // 회원가입 시도중\n  signUpErrorReason: '',\n  // 회원가입 실패사유\n  me: null,\n  // 내 정보\n  followingList: [],\n  // 팔로잉 리스트\n  followerList: [],\n  // 팔로워 리스트\n  userInfo: null // 남의 정보\n\n}; //= =액션의 이름(비동기요청)====================\n\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport var LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport var LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\nexport var LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\nexport var LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE';\nexport var FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\nexport var FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\nexport var FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\nexport var UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\nexport var UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\nexport var UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\nexport var REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport var REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport var REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\nexport var ADD_POST_TO_ME = 'ADD_POST_TO_ME'; //= =실제 액션======================\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: true,\n          logInErrorReason: ''\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          me: action.data,\n          isLoading: false\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          logInErrorReason: action.error,\n          me: null\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: true\n        });\n      }\n\n    case LOG_OUT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: false,\n          me: null\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: true,\n          isSignedUp: false,\n          signUpErrorReason: ''\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          isSignedUp: true\n        });\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          signUpErrorReason: action.error\n        });\n      }\n\n    case LOAD_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_USER_SUCCESS:\n      {\n        if (action.me) {\n          return _objectSpread({}, state, {\n            me: action.data // 내 정보\n\n          });\n        }\n\n        return _objectSpread({}, state, {\n          userInfo: action.data // 남의 정보\n\n        });\n      }\n\n    case LOAD_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:\\react-nodebird\\ch6\\front\\reducers\\user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","id","initialState","isLoggingOut","isLoggingIn","logInErrorReason","isSignedUp","isSigningUp","signUpErrorReason","me","followingList","followerList","userInfo","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_FOLLOW_REQUEST","LOAD_FOLLOW_SUCCESS","LOAD_FOLLOW_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","ADD_POST_TO_ME","state","action","type","data","isLoading","error"],"mappings":";AAAA;AACA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,KADM;AAEhBC,EAAAA,IAAI,EAAE,EAFU;AAGhBC,EAAAA,UAAU,EAAE,EAHI;AAIhBC,EAAAA,SAAS,EAAE,EAJK;AAKhBC,EAAAA,EAAE,EAAE;AALY,CAAlB;AAQA,OAAO,IAAMC,YAAY,GAAG;AAAE;AAC5BC,EAAAA,YAAY,EAAE,KADY;AACL;AACrBC,EAAAA,WAAW,EAAE,KAFa;AAEN;AACpBC,EAAAA,gBAAgB,EAAE,EAHQ;AAGJ;AACtBC,EAAAA,UAAU,EAAE,KAJc;AAIP;AACnBC,EAAAA,WAAW,EAAE,KALa;AAKN;AACpBC,EAAAA,iBAAiB,EAAE,EANO;AAMH;AACvBC,EAAAA,EAAE,EAAE,IAPsB;AAOhB;AACVC,EAAAA,aAAa,EAAE,EARW;AAQP;AACnBC,EAAAA,YAAY,EAAE,EATY;AASR;AAClBC,EAAAA,QAAQ,EAAE,IAVgB,CAUV;;AAVU,CAArB,C,CAaP;;AAEA,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AAEP,OAAO,IAAMC,cAAc,GAAG,gBAAvB,C,CAEP;;AAEA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBpC,YAAyB;AAAA,MAAXqC,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKxB,cAAL;AAAqB;AACnB,iCACKsB,KADL;AAEElC,UAAAA,WAAW,EAAE,IAFf;AAGEC,UAAAA,gBAAgB,EAAE;AAHpB;AAKD;;AACD,SAAKY,cAAL;AAAqB;AACnB,iCACKqB,KADL;AAEElC,UAAAA,WAAW,EAAE,KAFf;AAGEK,UAAAA,EAAE,EAAE8B,MAAM,CAACE,IAHb;AAIEC,UAAAA,SAAS,EAAE;AAJb;AAMD;;AACD,SAAKxB,cAAL;AAAqB;AACnB,iCACKoB,KADL;AAEElC,UAAAA,WAAW,EAAE,KAFf;AAGEC,UAAAA,gBAAgB,EAAEkC,MAAM,CAACI,KAH3B;AAIElC,UAAAA,EAAE,EAAE;AAJN;AAMD;;AACD,SAAKa,eAAL;AAAsB;AACpB,iCACKgB,KADL;AAEEnC,UAAAA,YAAY,EAAE;AAFhB;AAID;;AACD,SAAKoB,eAAL;AAAsB;AACpB,iCACKe,KADL;AAEEnC,UAAAA,YAAY,EAAE,KAFhB;AAGEM,UAAAA,EAAE,EAAE;AAHN;AAKD;;AACD,SAAKI,eAAL;AAAsB;AACpB,iCACKyB,KADL;AAEE/B,UAAAA,WAAW,EAAE,IAFf;AAGED,UAAAA,UAAU,EAAE,KAHd;AAIEE,UAAAA,iBAAiB,EAAE;AAJrB;AAMD;;AACD,SAAKM,eAAL;AAAsB;AACpB,iCACKwB,KADL;AAEE/B,UAAAA,WAAW,EAAE,KAFf;AAGED,UAAAA,UAAU,EAAE;AAHd;AAKD;;AACD,SAAKS,eAAL;AAAsB;AACpB,iCACKuB,KADL;AAEE/B,UAAAA,WAAW,EAAE,KAFf;AAGEC,UAAAA,iBAAiB,EAAE+B,MAAM,CAACI;AAH5B;AAKD;;AACD,SAAKxB,iBAAL;AAAwB;AACtB,iCACKmB,KADL;AAGD;;AACD,SAAKlB,iBAAL;AAAwB;AACtB,YAAImB,MAAM,CAAC9B,EAAX,EAAe;AACb,mCACK6B,KADL;AAEE7B,YAAAA,EAAE,EAAE8B,MAAM,CAACE,IAFb,CAEmB;;AAFnB;AAID;;AACD,iCACKH,KADL;AAEE1B,UAAAA,QAAQ,EAAE2B,MAAM,CAACE,IAFnB,CAEyB;;AAFzB;AAID;;AACD,SAAKpB,iBAAL;AAAwB;AACtB,iCACKiB,KADL;AAGD;;AACD;AAAS;AACP,iCACKA,KADL;AAGD;AArFH;AAuFD,CAxFD","sourcesContent":["//= ===user정보를 답고 있는 store======================================\nconst dummyUser = {\n  nickname: '가물이',\n  Post: [],\n  Followings: [],\n  Followers: [],\n  id: 1,\n};\n\nexport const initialState = { // redux에서 중앙통제실\n  isLoggingOut: false, // 로그아웃 시도중\n  isLoggingIn: false, // 로그인 시도중\n  logInErrorReason: '', // 로그인 실패 사유\n  isSignedUp: false, // 회원가입 성공\n  isSigningUp: false, // 회원가입 시도중\n  signUpErrorReason: '', // 회원가입 실패사유\n  me: null, // 내 정보\n  followingList: [], // 팔로잉 리스트\n  followerList: [], // 팔로워 리스트\n  userInfo: null, // 남의 정보\n};\n\n//= =액션의 이름(비동기요청)====================\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\nexport const LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\nexport const LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE';\n\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\n\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\n\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\n\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\n\n//= =실제 액션======================\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST: {\n      return {\n        ...state,\n        isLoggingIn: true,\n        logInErrorReason: '',\n      };\n    }\n    case LOG_IN_SUCCESS: {\n      return {\n        ...state,\n        isLoggingIn: false,\n        me: action.data,\n        isLoading: false,\n      };\n    }\n    case LOG_IN_FAILURE: {\n      return {\n        ...state,\n        isLoggingIn: false,\n        logInErrorReason: action.error,\n        me: null,\n      };\n    }\n    case LOG_OUT_REQUEST: {\n      return {\n        ...state,\n        isLoggingOut: true,\n      };\n    }\n    case LOG_OUT_SUCCESS: {\n      return {\n        ...state,\n        isLoggingOut: false,\n        me: null,\n      };\n    }\n    case SIGN_UP_REQUEST: {\n      return {\n        ...state,\n        isSigningUp: true,\n        isSignedUp: false,\n        signUpErrorReason: '',\n      };\n    }\n    case SIGN_UP_SUCCESS: {\n      return {\n        ...state,\n        isSigningUp: false,\n        isSignedUp: true,\n      };\n    }\n    case SIGN_UP_FAILURE: {\n      return {\n        ...state,\n        isSigningUp: false,\n        signUpErrorReason: action.error,\n      };\n    }\n    case LOAD_USER_REQUEST: {\n      return {\n        ...state,\n      };\n    }\n    case LOAD_USER_SUCCESS: {\n      if (action.me) {\n        return {\n          ...state,\n          me: action.data, // 내 정보\n        };\n      }\n      return {\n        ...state,\n        userInfo: action.data, // 남의 정보\n      };\n    }\n    case LOAD_USER_FAILURE: {\n      return {\n        ...state,\n      };\n    }\n    default: {\n      return {\n        ...state,\n      };\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}